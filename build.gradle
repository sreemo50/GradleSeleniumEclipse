/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    
    //maven repository
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    // https://mvnrepository.com/artifact/org.testng/testng
	testCompile group: 'org.testng', name: 'testng', version: '6.14.2'
	
	// https://mvnrepository.com/artifact/com.relevantcodes/extentreports
	compile group: 'com.relevantcodes', name: 'extentreports', version: '2.41.2'
	
	// https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
	compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.11.0'
	
	// https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-server
	compile group: 'org.seleniumhq.selenium', name: 'selenium-server', version: '3.11.0'  
	// https://mvnrepository.com/artifact/com.beust/jcommander
	compile group: 'com.beust', name: 'jcommander', version: '1.72'
	
    
    
}


sourceSets {
       test {
        java { srcDir 'src/test/Tests'}
        //resources { srcDir 'src/test/resources' }
    }

    /*componentTest {
        java { srcDir 'src/ctest/java' }
        resources { srcDir 'src/ctest/resources' }
    }*/
}
/*
defaultTasks 'clean','run'

clean <<
{println 'Hai this is a cleaning process'}

run <<
{
println 'Hai this is a running process'
}
*/
task dot(type:Test) {
//java.srcDir=['src/test/Tests']			
useTestNG()
{
println 'hai test'
suites "src/test/Tests/TestNGSUITE.xml"
suiteName "TestNGSUITE"	
}
//systemProperties 'property':'value'
}